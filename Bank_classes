import tkinter as tk
import tkinter.messagebox
from fileinput import filename
from tkinter import messagebox
import csv

class Account:
 def __init__(self,account_name,account_number,account_balance=0,account_email_id=None):
   self.account_name=account_name
   self.account_number=account_number
   self.account_balance=float(account_balance)
   self.account_email_id=account_email_id
   self.transactionlist=[]
 def deposit(self,amount):
   self.balance+=float(amount)
   self.transactionlist.append("Deposit: $"+amount)
   return self.balance
 def withdrawal(self,amount):
   if self.balance >=float(amount):
       self.balance-=amount
       self.transactionlist.append("Withdrawal: $"+amount)
       return self.balance
   else:
       tkinter.messagebox.showerror("You can't withdraw $"+amount+" due to insufficient funds")
 def get_transaction_history(self):
     return self.transactionlist

 class Bank_action:
     def __init__(self,filename="account.csv"):
         self.filename=filename
         self.accounts={} #dictionary to store account object
     def  read_accounts(self):

             try:
                 with open(self.filename, 'r') as csvfile:
                     csvreader = csv.reader(csvfile)
                     for row in csvreader:
                         account_name, account_number, account_balance, account_email=row
                         account = Account(account_name, account_number, account_balance, account_email)
                         self.accounts[account_number] = account
             except FileNotFoundError:
                 pass

     def save_account(self):
         with open (self.filename,'w') as csvfile:
             writer=csv.writer(csvfile)
             for account in  self.accounts.values():
                 writer.writerow([account.account_number,account.account_name,account.account_balance,account.account_email_id])
     def  create_account(self,account_name,account_number,initial_balance,account_email_id=None):
         if account_number in self.accounts:
             tkinter.messagebox.showerror("Account number already exists")

         account=Account(account_name,account_number,initial_balance,account_email_id)
         self.accounts[account_number]=account
         self.save_account()
         return account

     def login(self, account_number, account_name):
         account = self.accounts.get(account_number)
         if account and account.account_name == account_name:
             return account
         else:
             return None
